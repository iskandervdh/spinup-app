name: Build release

on:
  push:
    tags:
      - '*'

permissions:
  contents: write
  discussions: write

env:
  NODE_OPTIONS: '--max-old-space-size=4096'

  BUILD: 'true'
  WORKING_DIRECTORY: '.'
  WEBVIEW2: 'browser'

jobs:
  build:
    strategy:
    # Failure in one platform build won't impact the others
      fail-fast: false
      matrix:
        build:
          - name: 'spinup-app'
            platform:  'linux/amd64'
            os: 'ubuntu-22.04'
          # - name: 'spinup-app'
          #   platform:  'windows/amd64'
          #   os: 'windows-latest'
          # - name: 'spinup-app'
          #   platform:  'darwin/universal'
          #   os: 'macos-latest'

    runs-on: ${{ matrix.build.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # - name: Build wails
      #   uses: dAppServer/wails-build-action@v2.2
      #   id: build
      #   with:
      #     wails-build-webview2: embed

      # Setup and configure GoLang
      - name: Setup GoLang
        uses: actions/setup-go@v4
        with:
          check-latest: true
          go-version: '1.23'
      - run: go version
        shell: bash

      # Setup pnpm
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      # Setup and configure NodeJS
      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
          cache-dependency-path: './frontend/pnpm-lock.yaml'

      # install Wails
      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest
        shell: bash
      - name: Update Ubuntu package list
        if: runner.os == 'Linux'
        run: sudo apt-get update
        shell: bash
      - name: Install Ubuntu Wails deps
        if: runner.os == 'Linux'
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libgtk-3-0 libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev gcc-aarch64-linux-gnu
        # run: sudo apt-get update && sudo apt-get install -y libgtk-3-0 libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev gcc-aarch64-linux-gnu
        # shell: bash
      # - name: Install macOS Wails deps
      #   if: runner.os == 'macOS'
      #   run: brew install mitchellh/gon/gon
      #   shell: bash

      # Building step
      # - name: Build macOs App
      #   if: runner.os == 'macOS'
      #   working-directory: ${{ env.WORKING_DIRECTORY }}
      #   run: wails build --platform ${{ matrix.build.platform }} -webview2 ${{ env.WEBVIEW2 }} -o ${{ matrix.build.name }}
      #   shell: bash
      - name: Build Linux App
        if: runner.os == 'Linux'
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: |
          wails build --platform ${{ matrix.build.platform }} -webview2 ${{ env.WEBVIEW2 }} -o ${{ matrix.build.name }}-webkit2-40 -tags webkit2_40
          wails build --platform ${{ matrix.build.platform }} -webview2 ${{ env.WEBVIEW2 }} -o ${{ matrix.build.name }}-webkit2-41 -tags webkit2_41
        shell: bash
      # - name: Build Windows App
      #   if: runner.os == 'Windows' && inputs.nsis == 'false'
      #   working-directory: ${{ env.WORKING_DIRECTORY }}
      #   run: wails build --platform ${{ matrix.build.platform }} -webview2 ${{ env.WEBVIEW2 }} -o ${{ matrix.build.name }}
      #   shell: bash
      # - name: Build Windows App + Installer
      #   if: runner.os == 'Windows' && inputs.nsis == 'true'
      #   working-directory: ${{ env.WORKING_DIRECTORY }}
      #   run: wails build --platform ${{ matrix.build.platform }} -webview2 ${{ env.WEBVIEW2 }} -nsis -o ${{ matrix.build.name }}
      #   shell: bash

      # Add permissions to the binary
      # - name: Add macOS perms
      #   if: runner.os == 'macOS'
      #   working-directory: ${{ env.WORKING_DIRECTORY }}
      #   run: chmod +x build/bin/*/Contents/MacOS/*
      #   shell: bash
      - name: Add Linux perms
        if: runner.os == 'Linux'
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: chmod +x build/bin/*
        shell: bash

      # Package as .deb for Ubuntu
      - name: Package as .deb for Ubuntu
        if: runner.os == 'Linux'
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: |
          for version in 40 41; do
            mkdir -p deb/spinup-app-webkit2-${version}/DEBIAN
            mkdir -p deb/spinup-app-webkit2-${version}/usr/share/spinup/bin
            cp build/bin/spinup-app-webkit2-${version} deb/spinup-app-webkit2-${version}/usr/share/spinup/bin/spinup-app
            cp build/DEBIAN/* deb/spinup-app-webkit2-${version}/DEBIAN
            cp -r build/share deb/spinup-app-webkit2-${version}

            SPINUP_APP_VERSION=$(cat ./app/.version)
            echo -e "\nVersion: ${SPINUP_APP_VERSION/v/""}" >> deb/spinup-app-webkit2-${version}/DEBIAN/control

            if [ "$version" -eq "40" ]; then
              echo "Depends: libgtk-3-0, libwebkit2gtk-4.0-dev" >> deb/spinup-app-webkit2-${version}/DEBIAN/control
            else
              echo "Depends: libgtk-3-0, libwebkit2gtk-4.1-dev" >> deb/spinup-app-webkit2-${version}/DEBIAN/control
            fi

            dpkg-deb --build deb/spinup-app-webkit2-${version}
          done
        shell: bash

      # Upload build assets
      - uses: actions/upload-artifact@v3
        with:
          name: Wails Build ${{ runner.os }} ${{ matrix.build.name }}
          path: |
            */bin/
            *\bin\*
            */spinup-app-*.deb
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            */bin/*
            */spinup-app-*.deb
