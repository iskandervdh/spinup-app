name: Wails build

on:
  push:
    tags:
      - '*'

permissions:
  contents: write
  discussions: write

env:
  NODE_OPTIONS: '--max-old-space-size=4096'

  BUILD: 'true'
  WORKING_DIRECTORY: '.'
  WEBVIEW2: 'browser'

jobs:
  build:
    strategy:
    # Failure in one platform build won't impact the others
      fail-fast: false
      matrix:
        build:
          - name: 'spinup-app'
            platform:  'linux/amd64'
            os: 'ubuntu-latest'
          # - name: 'spinup-app'
          #   platform:  'windows/amd64'
          #   os: 'windows-latest'
          # - name: 'spinup-app'
          #   platform:  'darwin/universal'
          #   os: 'macos-latest'

    runs-on: ${{ matrix.build.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # - name: Build wails
      #   uses: dAppServer/wails-build-action@v2.2
      #   id: build
      #   with:
      #     wails-build-webview2: embed

      # Setup and configure GoLang
      - name: Setup GoLang
        uses: actions/setup-go@v4
        with:
          check-latest: true
          go-version: '1.23'
      - run: go version
        shell: bash
      # Setup and configure NodeJS
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'
      # (Optional) Setup pnpm
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      # install wails
      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest
        shell: bash
      - name: Install Ubuntu Wails deps
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install libgtk-3-0 libwebkit2gtk-4.1-dev gcc-aarch64-linux-gnu
        shell: bash
      - name: Install macOS Wails deps
        if: runner.os == 'macOS'
        run: brew install mitchellh/gon/gon
        shell: bash
      # Building step
      - name: Build macOs App
        if: runner.os == 'macOS'
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: wails build --platform ${{ matrix.build.platform }} -webview2 ${{ env.WEBVIEW2 }} -o ${{ matrix.build.name }}
        shell: bash
      - name: Build Linux App
        if: runner.os == 'Linux'
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: wails build --platform ${{ matrix.build.platform }} -webview2 ${{ env.WEBVIEW2 }} -o ${{ matrix.build.name }} -tags webkit2_41
        shell: bash
      # - name: Build Windows App
      #   if: runner.os == 'Windows' && inputs.nsis == 'false'
      #   working-directory: ${{ env.WORKING_DIRECTORY }}
      #   run: wails build --platform ${{ matrix.build.platform }} -webview2 ${{ env.WEBVIEW2 }} -o ${{ matrix.build.name }}
      #   shell: bash
      # - name: Build Windows App + Installer
      #   if: runner.os == 'Windows' && inputs.nsis == 'true'
      #   working-directory: ${{ env.WORKING_DIRECTORY }}
      #   run: wails build --platform ${{ matrix.build.platform }} -webview2 ${{ env.WEBVIEW2 }} -nsis -o ${{ matrix.build.name }}
      #   shell: bash
      # - name: Add macOS perms
      #   if: runner.os == 'macOS'
      #   working-directory: ${{ env.WORKING_DIRECTORY }}
      #   run: chmod +x build/bin/*/Contents/MacOS/*
      #   shell: bash
      - name: Add Linux perms
        if: runner.os  == 'Linux'
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: chmod +x build/bin/*
        shell: bash

      # Upload build assets
      - uses: actions/upload-artifact@v3
        with:
          name: Wails Build ${{ runner.os }} ${{ matrix.build.name }}
          path: |
            */bin/
            *\bin\*
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            */bin/*
